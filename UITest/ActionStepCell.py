# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'ActionStepCell.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QMessageBox

import BrowserAction
import TableFields


class TaskActionFlowStep:
    '''
    任务执行动作
    '''

    def __init__(self, flow_id, step, action, field, content, branch_flow_id=None):
        self.id = None
        self.flow_id = flow_id
        self.step = step
        self.action = action
        self.content = content
        self.branch_flow_id = branch_flow_id
        self.field = field


class ActionSetpCell(QtWidgets.QWidget):

    def build_step_for(self, flow_id):
        index = self.comboBox.currentIndex()
        if index == 0:
            QMessageBox.about(self, '温馨提示', '请选择执行动作')
            return None

        index = index - 1
        action = BrowserAction.actions[index]
        action_id = action['action']

        field = ''
        key = self.field_comboBox.currentText()
        if key == '请选择使用字段':
            field = ''
        else:
            field = key

        step = TaskActionFlowStep(flow_id=flow_id, step=self.index, action=action_id, field=field,
                                  content=self.lineEdit_2.text(), branch_flow_id=self.lineEdit.text())

        if self.edit_id is not None:
            step.id = self.edit_id

        return step

    def __init__(self, index):
        super(ActionSetpCell, self).__init__()

        self.edit_id = None
        self.index = index

        self.horizontalLayout = QtWidgets.QHBoxLayout(self)
        self.horizontalLayout.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.label = QtWidgets.QLabel(self)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label.sizePolicy().hasHeightForWidth())
        self.label.setSizePolicy(sizePolicy)
        self.label.setMinimumSize(QtCore.QSize(30, 0))
        self.label.setObjectName("label")
        self.label.setText(f"{index}")
        self.horizontalLayout.addWidget(self.label)

        self.comboBox = QtWidgets.QComboBox(self)
        self.comboBox.setObjectName("comboBox")
        self.comboBox.addItem("请选择操作")

        # 操作
        actions = BrowserAction.actions
        for dic0 in actions:
            title = dic0['title']
            self.comboBox.addItem(title)

        self.horizontalLayout.addWidget(self.comboBox)
        self.field_comboBox = QtWidgets.QComboBox(self)
        self.field_comboBox.setObjectName("field_comboBox")
        self.field_comboBox.addItem("请选择使用字段")

        # 数据表字段映射
        all_keys = TableFields.maps.keys()
        for key in all_keys:
            self.field_comboBox.addItem(key)

        self.horizontalLayout.addWidget(self.field_comboBox)

        self.lineEdit_2 = QtWidgets.QLineEdit(self)
        self.lineEdit_2.setObjectName("lineEdit_2")
        self.horizontalLayout.addWidget(self.lineEdit_2)

        self.lineEdit = QtWidgets.QLineEdit(self)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.lineEdit.sizePolicy().hasHeightForWidth())
        self.lineEdit.setSizePolicy(sizePolicy)
        self.lineEdit.setMinimumSize(QtCore.QSize(100, 0))
        self.lineEdit.setObjectName("lineEdit")
        self.lineEdit.setPlaceholderText("失败转向流程ID")
        self.horizontalLayout.addWidget(self.lineEdit)
